{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.d8ace371.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    // 增\r\n    create(string) {\r\n        //template标签不会在页面中显示，并且可以容纳所有标签\r\n        const container = document.createElement('template');\r\n        //trim()会从一个字符串的两端删除空白字符\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling)\r\n        // node.after(node2);\r\n    },\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    },\r\n    append(parent,node){\r\n        parent.appendChild(node);\r\n    },\r\n    wrap(node,parent){\r\n        dom.before(node,parent); //把新节点插入到将被包裹节点的前面\r\n        dom.append(parent,node); //将 将被包裹节点插入到新节点里成为子节点\r\n    },\r\n\r\n    // 删\r\n    remove(node){\r\n        node.parentNode.removeChild(node);\r\n        return node // 删除整个节点\r\n    },\r\n    empty(node){\r\n        /* v1 \r\n        node.innerHTML = '';\r\n        这种方法也可以，但是没有办法获得删除节点的引用\r\n        */\r\n\r\n        /* v2\r\n        const ({childNodes} = node 相等 childNodes = node.childNodes)\r\n        const array = [];\r\n        for(let i=0; i<childNodes.length; i++){\r\n            dom.remove(childNodes[i])\r\n            array.push(childNodes[i])\r\n        }\r\n        remove之后，childNodes.length是时时改变的，有bug\r\n        */\r\n        const array = [];\r\n        let x = node.firstChild;\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild));\r\n            x = node.firstChild;\r\n        }\r\n        return array //返回被删除的节点子代\r\n    },\r\n\r\n    // 改\r\n    attr(node,name,value){ //重载\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node,string){ //适配\r\n        if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string;\r\n            }else{\r\n                node.textContent = string;\r\n            }\r\n        }else if(arguments.length === 1){\r\n            if('innerText' in node){\r\n                return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node,string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string;\r\n        }else if(arguments.length === 1){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node,name,value){\r\n        if(arguments.length === 3){\r\n            //dom.style(div,'color','blue')\r\n            node.style[name] = value\r\n        }else if(arguments.length === 2){\r\n            //typeof用来检测一个对象是否已经被定义或者被赋值\r\n            if(typeof name === 'string'){ \r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            //instanceof用来比较两个操作数的构造函数\r\n            }else if(name instanceof Object){\r\n                //dom.style(div,{})\r\n                for(let key in name){\r\n                node.style[key] = name[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class:{\r\n        add(node,className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node,className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n\r\n    //查\r\n    find(selector,scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    children(node){\r\n        return node.children\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(n=>n!==node)\r\n    },\r\n    next(node){\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){\r\n        for(let i =0; i< nodeList.length; i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i = 0\r\n        for(i =0;i <list.length; i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n\r\n};\r\n"]}